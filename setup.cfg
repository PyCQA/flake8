[bdist_wheel]
universal = 1

[metadata]
name = flake8
version = attr: src.flake8.__version__
license = MIT
license_file = LICENSE
description = the modular source code checker: pep8 pyflakes and co
long_description = file: README.rst
author = Tarek Ziade
author_email = tarek@ziade.org
maintainer = Ian Stapleton Cordasco
maintainer_email = graffatcolmingov@gmail.com
url = https://gitlab.com/pycqa/flake8
# # We document the reasoning for using ranges here:
# # http://flake8.pycqa.org/en/latest/faq.html#why-does-flake8-use-ranges-for-its-dependencies
# # And in which releases we will update those ranges here:
# # http://flake8.pycqa.org/en/latest/internal/releases.html#releasing-flake8
# requires-dist =
#     enum34; python_version<"3.4"
#     typing; python_version<"3.5"
#     configparser; python_version<"3.2"
#     functools32; python_version<"3.2"
#     entrypoints >= 0.3.0, < 0.4.0
#     pyflakes >= 2.1.0, < 2.2.0
#     pycodestyle >= 2.5.0, < 2.6.0
#     mccabe >= 0.6.0, < 0.7.0

classifiers =
    Development Status :: 5 - Production/Stable
    Environment :: Console
    Framework :: Flake8
    Intended Audience :: Developers
    License :: OSI Approved :: MIT License
    Programming Language :: Python
    Programming Language :: Python :: 2
    Programming Language :: Python :: 2.7
    Programming Language :: Python :: 3
    Programming Language :: Python :: 3.4
    Programming Language :: Python :: 3.5
    Programming Language :: Python :: 3.6
    Programming Language :: Python :: 3.7
    Topic :: Software Development :: Libraries :: Python Modules
    Topic :: Software Development :: Quality Assurance

[options]
package_dir=
    =src
packages = find:
python_requires = >=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*

# # We document the reasoning for using ranges here:
# # http://flake8.pycqa.org/en/latest/faq.html#why-does-flake8-use-ranges-for-its-dependencies
# # And in which releases we will update those ranges here:
# # http://flake8.pycqa.org/en/latest/internal/releases.html#releasing-flake8

install_requires =
    entrypoints >= 0.3.0, < 0.4.0
    pyflakes >= 2.1.0, < 2.2.0
    pycodestyle >= 2.5.0, < 2.6.0
    mccabe >= 0.6.0, < 0.7.0

[options.packages.find]
where=src

[options.extras_require]
enum34=enum34; python_version<"3.4"
typing=typing; python_version<"3.5"
configparser=configparser; python_version<"3.2"
functools32=functools32; python_version<"3.2"

[mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
# TODO: disallow_untyped_defs = true
no_implicit_optional = true
warn_unused_ignores = true

# TODO: until we opt in all the modules
[mypy-flake8.defaults]
disallow_untyped_defs = true
[mypy-flake8.exceptions]
disallow_untyped_defs = true
[mypy-flake8.formatting.*]
disallow_untyped_defs = true
[mypy-flake8.main.cli]
disallow_untyped_defs = true
[mypy-flake8.statistics]
disallow_untyped_defs = true
[mypy-flake8.utils]
disallow_untyped_defs = true

[mypy-tests.*]
disallow_untyped_defs = false
